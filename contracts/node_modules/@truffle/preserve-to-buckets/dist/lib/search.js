"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.search = void 0;
const Preserve = __importStar(require("@truffle/preserve"));
const search = ({ source, path = "" }) => {
    if (Preserve.Targets.Sources.isContent(source)) {
        return (async function* () {
            yield {
                path,
                content: source
            };
        })();
    }
    return (async function* () {
        for await (const entry of source.entries) {
            const currentPath = path ? `${path}/${entry.path}` : entry.path;
            const results = exports.search({
                source: entry.source,
                path: currentPath
            });
            for await (const result of results) {
                yield result;
            }
        }
    })();
};
exports.search = search;
//# sourceMappingURL=search.js.map