"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createLotusClient = exports.connect = void 0;
const filecoin_js_1 = require("filecoin.js");
async function* connect(options) {
    const { url, token, controls } = options;
    const { step } = controls;
    const task = yield* step({
        message: `Connecting to Filecoin node at ${url}...`
    });
    const client = exports.createLotusClient({ url, token });
    try {
        // TODO: Ideally I'd retrieve the version instead of ID, but that RPC method
        // is broken in textile's localnet.
        const id = await client.common.id();
        yield* task.succeed({
            result: id,
            message: `Connected to Filecoin node at ${url}`
        });
    }
    catch (error) {
        yield* task.fail({ error });
    }
    return client;
}
exports.connect = connect;
const createLotusClient = (options) => {
    const { url, token } = options;
    const connector = url.startsWith("ws")
        ? new filecoin_js_1.WsJsonRpcConnector({ url, token })
        : new filecoin_js_1.HttpJsonRpcConnector({ url, token });
    const client = new filecoin_js_1.LotusClient(connector);
    return client;
};
exports.createLotusClient = createLotusClient;
//# sourceMappingURL=connect.js.map