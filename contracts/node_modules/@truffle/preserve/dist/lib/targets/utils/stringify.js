"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.stringify = void 0;
const normalize_1 = require("./normalize");
const Common = __importStar(require(".."));
const stringify = async (target) => {
    const normalizedTarget = normalize_1.normalize(target);
    const source = await stringifySource(normalizedTarget.source);
    return { source };
};
exports.stringify = stringify;
const stringifySource = async (source) => {
    if (Common.Sources.isContainer(source)) {
        return await stringifyContainer(source);
    }
    return await stringifyContent(source);
};
const stringifyContainer = async (container) => {
    const entries = [];
    for await (const entry of container.entries) {
        entries.push(await stringifyEntry(entry));
    }
    return { entries };
};
const stringifyEntry = async (entry) => {
    const { path } = entry;
    const source = await stringifySource(entry.source);
    return { path, source };
};
const stringifyContent = async (content) => {
    const buffers = [];
    for await (const piece of content) {
        buffers.push(piece);
    }
    return Buffer.concat(buffers).toString();
};
//# sourceMappingURL=stringify.js.map